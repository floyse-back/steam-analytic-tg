from datetime import datetime, date, timedelta
from typing import List, Optional

import html
from src.application.dto.steam_dto import GameFullModel, CalendarEventModel, GanresOut, CategoryOut
from src.shared.dispatcher import DispatcherCommands
from html import escape

class NewsStyleText(DispatcherCommands):
    def __init__(self):
        super().__init__(
            command_map={
                "news_new_release": self.new_release_message,
                "news_free_games_now": self.free_games_now_message,
                "news_event_history": self.event_history_steam_facts_message,
                "news_discounts_steam_now": self.news_discounts_steam_message,
                "news_top_for_a_coins": self.news_top_for_a_coins_message,
                "news_random_game": self.random_game_message,
                "news_calendar_event_now": self.festivale_message,
                "news_game_from_ganre": self.game_from_ganre_message,
                "news_game_from_categories": self.game_from_categories_message
            }
        )
        self.category_messages = {
            "–ö–æ–ª–µ–∫—Ü—ñ–π–Ω—ñ –∫–∞—Ä—Ç–∫–∏ Steam": "üÉè <b>–ó–±–∏—Ä–∞–π —Ç–∞ –æ–±–º—ñ–Ω—é–π—Å—è!</b>\nSteam-–∫–∞—Ä—Ç–∫–∏ ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏, —Ü–µ —Å—Ç–∏–ª—å. –¶—è –≥—Ä–∞ –¥–∞—Å—Ç—å —Ç–æ–±—ñ —à–∞–Ω—Å –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –∫–æ–ª–µ–∫—Ü—ñ—é!",
            "–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞ –≥—Ä–∞": "ü§ù <b>–ì—Ä–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏</b>\n–ì—Ä–∞—Ç–∏ —Ä–∞–∑–æ–º –∑–∞–≤–∂–¥–∏ –≤–µ—Å–µ–ª—ñ—à–µ! –¶—è –≥—Ä–∞ ‚Äî —Å–∞–º–µ —Ç–µ, —â–æ —Ç—Ä–µ–±–∞ –¥–ª—è —Å–ø—ñ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è!"
        }
        self.ganre_messages = {
            "–°—Ç—Ä–∞—Ç–µ–≥—ñ—ó": "üß† <b>–°—Ç—Ä–∞—Ç–µ–≥—ñ—è ‚Äî —Å–∏–ª–∞ –¥—É–º–∫–∏!</b>\n–ü–ª–∞–Ω—É–π, –∫–µ—Ä—É–π, –ø–µ—Ä–µ–º–∞–≥–∞–π! –¶—è –≥—Ä–∞ –∑–º—É—Å–∏—Ç—å —Ç–µ–±–µ –º–∏—Å–ª–∏—Ç–∏ –Ω–∞ –∫—ñ–ª—å–∫–∞ —Ö–æ–¥—ñ–≤ —É–ø–µ—Ä–µ–¥.",
            "–ü—Ä–∏–≥–æ–¥–∏": "üó∫Ô∏è <b>–ì–æ—Ç–æ–≤–∏–π –¥–æ –ø—Ä–∏–≥–æ–¥?</b>\n–ù–µ–≤—ñ–¥–æ–º—ñ —Å–≤—ñ—Ç–∏, —Ç–∞—î–º–Ω–∏—Ü—ñ –π —Å—é–∂–µ—Ç–∏ ‚Äî —Ü—è –≥—Ä–∞ –∑–∞—Ö–æ–ø–∏—Ç—å —Ç–µ–±–µ –∑ –ø–µ—Ä—à–∏—Ö —Ö–≤–∏–ª–∏–Ω!",
            "–†–æ–ª—å–æ–≤—ñ —ñ–≥—Ä–∏": "üßô <b>–†–æ–ª—å–æ–≤–∞ –º–∞–≥—ñ—è!</b>\n–°—Ç–≤–æ—Ä–∏ —Å–≤–æ–≥–æ –≥–µ—Ä–æ—è, –∑–∞–Ω—É—Ä—Å—è –≤ —ñ—Å—Ç–æ—Ä—ñ—é —Ç–∞ –≤–∏—Ä—ñ—à—É–π –¥–æ–ª—é —Å–≤—ñ—Ç—É. –û–±–∏—Ä–∞–π –º—É–¥—Ä–æ!"
        }

    @staticmethod
    def __create_game_from_history_news(data: List['GameFullModel']) -> str:
        now = datetime.now().date()
        result = []

        for game in data:
            # –†–µ–ª—ñ–∑
            release_str = game.release_data.strftime("%d.%m.%Y") if game.release_data else "?"
            years_passed = now.year - game.release_data.year if game.release_data else "?"

            # –í—ñ–¥–≥—É–∫–∏
            if game.recomendations:
                reviews = f"{round(game.recomendations / 1000)}K+" if game.recomendations >= 1000 else str(
                    game.recomendations)
            else:
                reviews = "–ù–µ–º–∞—î"

            # Metacritic
            metacritic_block = f"üèÜ <b>Metacritic:</b> <i>{game.metacritic}</i>" if game.metacritic and game.metacritic != "-1" else ""

            # –ó–Ω–∏–∂–∫–∞
            if game.discount and game.discount > 0:
                price_block = f"üí∞ <b>-{game.discount}%</b> ‚Üí <b>{game.final_formatted_price}</b>"
            else:
                price_block = f"üí∞ <b>{game.final_formatted_price or '‚Äî'}</b>"

            # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            game_text = (
                f"üéÆ <a href='https://store.steampowered.com/app/{game.steam_appid}'>{game.name}</a>\n"
                f"üìÖ <b>–†–µ–ª—ñ–∑:</b> {release_str} ‚Äî <i>{years_passed} —Ä–æ–∫—ñ–≤ —Ç–æ–º—É</i>\n"
                f"{price_block}\n"
                f"üëç <b>–í—ñ–¥–≥—É–∫—ñ–≤:</b> {reviews}\n"
                f"{metacritic_block}\n"
            )

            result.append(game_text.strip())

        return "\n\n".join(result)

    @staticmethod
    def __create_game_from_steam_news(data: List['GameFullModel']) -> str:
        result = []
        for game in data:
            name = game.name
            discount = f"-{game.discount}%" if game.discount else "‚Äî"
            price = game.final_formatted_price or "–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ"
            recs = f"{game.recomendations // 1000}K+" if game.recomendations and game.recomendations >= 1000 else str(
                game.recomendations or "‚Äî")
            release = game.release_data.year if game.release_data else "N/A"
            link = f"https://store.steampowered.com/app/{game.steam_appid}"

            block = (
                f"\nüéÆ <b>{name}</b>\n"
                f"üîª {discount} ‚Üí {price}\n"
                f"üí¨ {recs} —Ä–µ—Ü–µ–Ω–∑—ñ–π\n"
                f"üìÖ –†–µ–ª—ñ–∑: {release}\n"
                f"üîó <a href=\"{link}\">–£ Steam</a>"
            )

            result.append(block)

        return "\n\n".join(result)

    @staticmethod
    def __create_data_games_list(data: List[GameFullModel],index_allowed:bool=True,shorted:bool=False,free_delete:bool=False) -> str:
        text = ""
        for index,game in enumerate(data):
            if game.discount!=100 and free_delete:
                continue
            # –ù–∞–∑–≤–∞ –≥—Ä–∏
            name = escape(game.name)
            # –¶—ñ–Ω–∞
            price = "üÜì –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ" if game.is_free or (game.final_price == 0) else f"üí∞ {game.final_formatted_price}"

            # –ó–Ω–∏–∂–∫–∞
            discount = f"üîª -{game.discount}% " if game.discount and game.discount > 0 else ""

            # –ú–µ—Ç–∞–∫—Ä–∏—Ç–∏–∫
            metacritic = f"üèÜ Metacritic: {game.metacritic}" if game.metacritic != '-1' and game.metacritic else "üèÜ Metacritic: N/A"

            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
            recommendations = f"üëç –†–µ—Ü–µ–Ω–∑—ñ–π: {game.recomendations}" if game.recomendations else ""

            # –ñ–∞–Ω—Ä–∏
            genres = ", ".join([escape(g.ganres_name) for g in game.game_ganre[0:5]]) or "–ë–µ–∑ –∂–∞–Ω—Ä—É"

            # –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó
            categories = ", ".join([escape(c.category_name) for c in game.game_categories[0:5]]) or "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π"

            # –í–∏–¥–∞–≤—Ü—ñ
            publishers = ", ".join([escape(p.publisher_name) for p in game.game_publisher[0:5]]) or None

            # –û–ø–∏—Å
            description = escape(game.short_description or "–û–ø–∏—Å—É –Ω–µ–º–∞—î")

            # –î–∞—Ç–∞ —Ä–µ–ª—ñ–∑—É
            release = f"üìÖ –†–µ–ª—ñ–∑: {game.release_data.strftime('%d.%m.%Y')}" if game.release_data else ""

            # –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è HTML
            if shorted:
                text +=(
                    f"<b>üéÆ{f'{index+1}.' if index_allowed else ""} {name}</b>\n"
                    f"{discount}{price}\n"
                    f"{metacritic} | {recommendations}\n"
                    f"{release}\n"
                    f"<a href=\"https://store.steampowered.com/app/{game.steam_appid}\">üîó –í—ñ–¥–∫—Ä–∏—Ç–∏ —É Steam</a>\n\n"
                )
            else:
                text += (
                f"<b>üéÆ{f'{index+1}.' if index_allowed else ""} {name}</b>\n"
                f"{discount}{price}\n"
                f"{metacritic} | {recommendations}\n\n"
                f"üìö <i>{description}</i>\n\n"
                f"üè∑Ô∏è –ñ–∞–Ω—Ä–∏: {genres}\n"
                f"üéØ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó: {categories}\n"
                f"{f'üè¢ –í–∏–¥–∞–≤–µ—Ü—å: {publishers}\n' if publishers else ''}\n"
                f"{release}\n"
                f"<a href=\"https://store.steampowered.com/app/{game.steam_appid}\">üîó –í—ñ–¥–∫—Ä–∏—Ç–∏ —É Steam</a>\n"
            )
        return text

    def new_release_message(self, data: List[GameFullModel]):
        text_start = (
            "üöÄ <b>–°–≤—ñ–∂–∞—á–æ–∫ –ø—Ä–∏–ª–µ—Ç—ñ–≤!</b>\n"
            "–ù–æ–≤—ñ —ñ–≥—Ä–∏ —â–æ–π–Ω–æ –≤–∏—Å–∫–æ—á–∏–ª–∏ —É Steam, —â–µ –≥–∞—Ä—è—á—ñ üî•\n"
            "–ú–æ–∂–µ –∑–Ω–∞–π–¥–µ—à —â–æ—Å—å —Å–º–∞—á–Ω–µ–Ω—å–∫–µ üéÆüëá\n"
        )
        result = self.__generate_steam_new_release(header=text_start,games=data)
        return result

    def free_games_now_message(self, data: List[GameFullModel]):
        if len(data) == 1:
            data_list = self.__create_data_games_list(data,free_delete=True,index_allowed=False)
        else:
            data_list = self.__create_data_games_list(data,shorted = True)
        if len(data_list)==0:
            return None
        text_start = (
            "üÜì <b>–ë–ï–ó–ö–û–®–¢–û–í–ù–û?!</b>\n"
            "–¢–∞–∫! –¶—ñ —ñ–≥—Ä–∏ –∑–∞—Ä–∞–∑ –º–æ–∂–Ω–∞ –∑–∞–±—Ä–∞—Ç–∏ –∑–∞ 0 –≥—Ä–∏–≤–µ–Ω—å! üéÅ\n"
            "–Ø–∫ –∫–∞–∂–µ –Ω–∞—Ä–æ–¥–Ω–∞ –º—É–¥—Ä—ñ—Å—Ç—å: ¬´–î–∞—Ä–æ–≤–∞–Ω–æ–º—É Steam-–∞–∫–∞—É–Ω—Ç—É –≤ –º–µ—Ç–∞–∫—Ä–∏—Ç–∏–∫—É –Ω–µ –¥–∏–≤–ª—è—Ç—å—Å—è¬ª üòÖüëá\n\n"
            f"{data_list}\n"
        )
        return text_start

    def event_history_steam_facts_message(self, data: List[GameFullModel]):
        text_start = (
            "üìú <b>–¢—Ä–æ—Ö–∏ —ñ—Å—Ç–æ—Ä—ñ—ó, —Ç—Ä–æ—Ö–∏ —ñ–≥–æ—Ä!</b>\n"
            "–û—Å—å –¥–æ–±—ñ—Ä–∫–∞, –ø—Ä–∏—Å–≤—è—á–µ–Ω–∞ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–∏–º –ø–æ–¥—ñ—è–º —Ç–∞ –º–æ–º–µ–Ω—Ç–∞–º –∑—ñ —Å–≤—ñ—Ç—É Steam üë¥üíª\n"
            "–ü–æ—Ä–∏–Ω—å —É –Ω–æ—Å—Ç–∞–ª—å–≥—ñ—é (–∞–±–æ –≤–∏–≤—á–∏ —â–æ—Å—å –Ω–æ–≤–µ–Ω—å–∫–µ) üëá\n\n"
            f"{self.__create_game_from_history_news(data)}\n"
        )
        return text_start

    def news_discounts_steam_message(self, data: List[GameFullModel]):
        text_start = (
            "üí∏ <b>–ó–Ω–∏–∂–∫–∏ –ª–µ—Ç—è—Ç—å, –≥–∞–º–∞–Ω—Ü—ñ —Ç—Ä–µ–º—Ç—è—Ç—å!</b>\n"
            "–¶—ñ —ñ–≥—Ä–∏ –∑–∞—Ä–∞–∑ –∑—ñ –∑–Ω–∏–∂–∫–∞–º–∏, –∞ –æ—Ç–∂–µ: —Å–∞–º–µ —á–∞—Å –∑—Ä–æ–±–∏—Ç–∏ –≤–∏–≥–ª—è–¥, —â–æ —Ç–æ–±—ñ –≤–æ–Ω–∏ –∂–∏—Ç—Ç—î–≤–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ üõíü§£üëá\n"
            f"{self.__create_game_from_steam_news(data)}\n"
        )
        return text_start

    def news_top_for_a_coins_message(self, data: List[GameFullModel]):
        text_start = (
            "ü™ô <b>–ú–∞–∫—Å–∏–º—É–º –∫–∞–π—Ñ—É ‚Äî –º—ñ–Ω—ñ–º—É–º –≤–∏—Ç—Ä–∞—Ç!</b>\n"
            "–û—Å—å —Ç–æ–ø —ñ–≥–æ—Ä, —è–∫—ñ –¥–∞—é—Ç—å –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –∫–æ—à—Ç—É—é—Ç—å.\n"
            "–ë–æ –Ω–∞–≤—ñ—â–æ –ø–ª–∞—Ç–∏—Ç–∏ 1000 –≥—Ä–Ω, —è–∫—â–æ –∑–∞ 200 –º–æ–∂–Ω–∞ –∑–∞–ª–∏–ø–Ω—É—Ç–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å? üòéüëá\n"
            f"{self.__create_game_from_steam_news(data)}\n"
        )
        return text_start

    def random_game_message(self, data: List[GameFullModel]):
        text_start = (
            "üé≤ <b>–†—É–ª–µ—Ç–∫–∞ —á–∞—Å—É!</b>\n"
            "–Ø –≤–∏–±—Ä–∞–≤ –≥—Ä—É –≤–∏–ø–∞–¥–∫–æ–≤–æ ‚Äî –∞ —Ä–∞–ø—Ç–æ–º —Ü–µ —Ç–≤–æ—î –Ω–æ–≤–µ –≥–µ–π–º–µ—Ä—Å—å–∫–µ –∫–æ—Ö–∞–Ω–Ω—è? üíòüéÆ\n"
            "–ù–µ –¥—è–∫—É–π, –ø—Ä–æ—Å—Ç–æ –¥–∏–≤–∏—Å—å üëá\n\n"
            f"{self.__create_data_games_list(data,index_allowed=False)}\n"
        )
        return text_start

    def trailer_from_day_message(self,data:List[GameFullModel]):
        pass

    def festivale_message(self, event: CalendarEventModel) -> str:
        if isinstance(event, list):
            event = event[0]
        text = self.__check_date_steam_event_and_chose_answer(event)
        return text

    def __check_date_steam_event_and_chose_answer(self,event:GameFullModel) -> Optional[str]:
        """
        –ì–µ–Ω–µ—Ä—É—î HTML-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è Telegram –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –¥–∞—Ç–∏ —Ç–∞ —Ç–∏–ø—É –ø–æ–¥—ñ—ó:
        1 - –ü–æ—á–∞—Ç–æ–∫ –ø–æ–¥—ñ—ó
        2 - –ó–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –ø–æ–¥—ñ—ó
        3 - –ó–∞–≤—Ç—Ä–∞ –ø–æ–¥—ñ—è –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è
        """
        today = date.today()
        tomorrow = today + timedelta(days=1)

        if today == event.date_start:
            if event.type_name == "festival":
                return (
                    f"<b>üéâ –°—Ç–∞—Ä—Ç—É–≤–∞–≤ –Ω–æ–≤–∏–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å —É Steam!</b>\n\n"
                    f"üïπÔ∏è <i>{event.name}</i> ‚Äî —É–Ω—ñ–∫–∞–ª—å–Ω–∞ –Ω–∞–≥–æ–¥–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ –¥–ª—è —Å–µ–±–µ –Ω–æ–≤—ñ —ñ–≥—Ä–∏, —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –¥–µ–º–æ, –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç—Ä—ñ–º–∏ —Ç–∞ –ø—Ä–æ—Å—Ç–æ –∫–∞–π—Ñ–∞–Ω—É—Ç–∏ –≤—ñ–¥ —É–ª—é–±–ª–µ–Ω–æ–≥–æ –∂–∞–Ω—Ä—É.\n\n"
                    f"<b>üìÖ –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:</b> –∑ <u>{event.date_start.strftime('%d.%m')}</u> –¥–æ <u>{event.date_end.strftime('%d.%m')}</u>\n\n"
                    f"üéÆ –ó–∞–∑–∏—Ä–Ω–∏ –≤ Steam ‚Äî –±—É–¥–µ –≥–∞—Ä—è—á–µ!"
                )
            else:
                return (
                    f"<b>üî• –ó–Ω–∏–∂–∫–∏ –≤–∂–µ –≤ Steam!</b>\n\n"
                    f"üõí <i>{event.name}</i> ‚Äî —ñ–¥–µ–∞–ª—å–Ω–∏–π —à–∞–Ω—Å –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É –Ω–æ–≤–∏–º–∏ —Ç–∞–π—Ç–ª–∞–º–∏. –¶—ñ–Ω–∏ –ø–∞–¥–∞—é—Ç—å, —è–∫ FPS –Ω–∞ —Å—Ç–∞—Ä–æ–º—É –Ω–æ—É—Ç—ñ.\n\n"
                    f"<b>üìÖ –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:</b> –∑ <u>{event.date_start.strftime('%d.%m')}</u> –¥–æ <u>{event.date_end.strftime('%d.%m')}</u>\n\n"
                    f"üí∏ –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏ —à–∞–ª–µ–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó ‚Äî –∑–Ω–∏–∂–∫–∏ –¥–æ -90%!"
                )

        elif today == event.date_end:
            if event.type_name == "festival":
                return (
                    f"<b>‚åõ –°—å–æ–≥–æ–¥–Ω—ñ –æ—Å—Ç–∞–Ω–Ω—ñ–π –¥–µ–Ω—å —Ñ–µ—Å—Ç–∏–≤–∞–ª—é!</b>\n\n"
                    f"üïπÔ∏è <i>{event.name}</i> –∑–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ. –¶–µ —Ç–≤—ñ–π –æ—Å—Ç–∞–Ω–Ω—ñ–π —à–∞–Ω—Å –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ–º–æ, –æ—Ü—ñ–Ω–∏—Ç–∏ —ñ–≥—Ä–∏ —Ç–∞ –∑–∞–±—Ä–∞—Ç–∏ —Ç–µ, —â–æ —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—è.\n\n"
                    f"üé¨ –ù–µ –∑–≤–æ–ª—ñ–∫–∞–π ‚Äî –≤—ñevent–π Steam —ñ –≤—Å—Ç–∏–≥–Ω–∏ –∑–∞—Ü—ñ–Ω–∏—Ç–∏!\n\n"
                    f"<b>üóì –î–æ:</b> <u>{event.date_end.strftime('%d.%m')}</u>"
                )
            else:
                return (
                    f"<b>üïî –û—Å—Ç–∞–Ω–Ω—ñ–π —à–∞–Ω—Å –Ω–∞ —à–∞–ª–µ–Ω—ñ –∑–Ω–∏–∂–∫–∏!</b>\n\n"
                    f"üí∞ <i>{event.name}</i> –∑–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ. –Ø–∫—â–æ —â–µ —â–æ—Å—å –∑–∞–ª–∏—à–∏–ª–æ—Å—å —É wishlist ‚Äî —á–∞—Å –¥—ñ—è—Ç–∏!\n\n"
                    f"<b>üìÖ –î–æ:</b> <u>{event.date_end.strftime('%d.%m')}</u>\n\n"
                    f"üö® –ù–∞—Å—Ç—É–ø–Ω—ñ –∑–Ω–∏–∂–∫–∏ ‚Äî –Ω–µ —Å–∫–æ—Ä–æ. –ù–µ –ø—Ä–æ“ë–∞–≤!"
                )

        elif tomorrow == event.date_start:
            if event.type_name == "festival":
                return (
                    f"<b>‚è≥ –ó–∞–≤—Ç—Ä–∞ —Å—Ç–∞—Ä—Ç—É—î –Ω–æ–≤–∏–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å —É Steam!</b>\n\n"
                    f"üïπÔ∏è <i>{event.name}</i> ‚Äî —Ü–µ –±—É–¥–µ —Å–ø—Ä–∞–≤–∂–Ω—î —Å–≤—è—Ç–æ –¥–ª—è –≥–µ–π–º–µ—Ä—ñ–≤: –¥–µ–º–æ, –∂–∞–Ω—Ä–æ–≤—ñ –ø—ñ–¥–±—ñ—Ä–∫–∏, —Å—Ç—Ä—ñ–º–∏ —Ç–∞ –±–∞–≥–∞—Ç–æ –≤—Å—å–æ–≥–æ —Ü—ñ–∫–∞–≤–æ–≥–æ!\n\n"
                    f"<b>üìÖ –ü–æ—á–∞—Ç–æ–∫:</b> <u>{event.date_start.strftime('%d.%m')}</u>\n\n"
                    f"üéÆ –ü—ñ–¥–≥–æ—Ç—É–π wishlist ‚Äî –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ –≥–∞—Ä—è—á–µ!"
                )
            else:
                return (
                    f"<b>üí• –ó–∞–≤—Ç—Ä–∞ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –Ω–æ–≤–∏–π —Ä–æ–∑–ø—Ä–æ–¥–∞–∂ —É Steam!</b>\n\n"
                    f"üõí <i>{event.name}</i> ‚Äî –≥–æ—Ç—É–π —Å–≤—ñ–π –≥–∞–º–∞–Ω–µ—Ü—å, –±–æ –±—É–¥—É—Ç—å —à–∞–ª–µ–Ω—ñ –∑–Ω–∏–∂–∫–∏!\n\n"
                    f"<b>üìÖ –ü–æ—á–∞—Ç–æ–∫:</b> <u>{event.date_start.strftime('%d.%m')}</u>\n\n"
                    f"üí∏ Wishlist —É–∂–µ –Ω–∞ –ø–æ–≥–æ—Ç–æ–≤—ñ?"
                )

        return None


    def game_from_ganre_message(self, dict_data: dict) -> str:
        ganre_name:str = dict_data["type_ganre"]
        data:GameFullModel = dict_data["data"][0]
        description:str = f"üîç –Ø–∫—â–æ —Ç–∏ —Ñ–∞–Ω–∞—Ç –∂–∞–Ω—Ä—É <b><i>{ganre_name}</i></b>, —Ü—è –≥—Ä–∞ —Ç–æ—á–Ω–æ –ø—Ä–∏–≤–µ—Ä–Ω–µ —Ç–≤–æ—é —É–≤–∞–≥—É!\n" if self.ganre_messages.get(f"{ganre_name}") is None else self.ganre_messages.get(f"{ganre_name}")

        return (
            f"{description}\n\n"
            f"{self.__generate_game_property_message(data,ganre_main=ganre_name)}\n"
        )

    def game_from_categories_message(self, dict_data: dict) -> str:
        category_name:str = dict_data["type_category"]
        data:GameFullModel = dict_data["data"][0]
        description = f"üîç –Ø–∫—â–æ —Ç–∏ –ø–æ–ª—é–±–ª—è—î—à –∫–∞—Ç–µ–≥–æ—Ä—ñ—é <b><i>{category_name}</i></b>, —Ü—è –≥—Ä–∞ —Ç–æ–±—ñ —Å–ø–æ–¥–æ–±–∞—î—Ç—å—Å—è!\n" if self.category_messages.get(f"{category_name}") is None else self.category_messages.get(f"{category_name}")

        return (
            f"{description}\n\n"
            f"{self.__generate_game_property_message(data, category_main=category_name)}\n"
        )


    def __generate_steam_new_release(self,header:str,games: List[GameFullModel]) -> str:
        msg = header

        for game in games:
            if game.is_free:
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ (–¥–µ–º–∫–∏)

            game_line = f"üéÆ <b>{game.name}</b>\n"

            if game.discount and game.final_formatted_price:
                game_line += f"üîª -{game.discount}% ‚Üí <b>{game.final_formatted_price}</b>\n"
            elif game.final_formatted_price:
                game_line += f"üí∞ <b>{game.final_formatted_price}</b>\n"

            release_year = game.release_data.strftime("%Y") if game.release_data else "?"
            recs = f"{game.recomendations} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π" if game.recomendations else "üí¨ –ù–µ–º–∞—î —Ä–µ—Ü–µ–Ω–∑—ñ–π"
            game_line += f"üìÖ {release_year} | {recs}\n"
            game_line += f'üîó <a href="https://store.steampowered.com/app/{game.steam_appid}">Steam</a>\n\n'

            if len(msg) + len(game_line) > 1024:
                break  # –Ω–µ –¥–æ–¥–∞—î–º–æ –±—ñ–ª—å—à–µ, —â–æ–± –Ω–µ –ø–µ—Ä–µ–≤–∏—â–∏—Ç–∏ –ª—ñ–º—ñ—Ç

            msg += game_line

        return msg.strip()

    def __generate_game_property_message(self, game: GameFullModel,ganre_main:Optional[str] = None,category_main:Optional[str]=None) -> str:
        game_ganre = game.game_ganre[0:5]
        game_category = game.game_categories[0:5]
        if ganre_main is not None and ganre_main not in [g.ganres_name for g in game_ganre]:
            game_ganre.insert(0, GanresOut(
                ganres_id=42,
                ganres_name=ganre_main
            ))
        if category_main is not None and category_main not in [c.category_name for c in game_category]:
            game_category.insert(0, CategoryOut(
                category_id = 42,
                category_name=category_main
            ))

        genre_names = ", ".join(html.escape(g.ganres_name) for g in game_ganre)
        category_names = ", ".join(html.escape(c.category_name) for c in game.game_categories[0:5]) or "–ù–µ–º–∞—î"
        publisher_names = ", ".join(html.escape(p.publisher_name) for p in game.game_publisher[0:5]) or None

        price_info = (
            f"üí∞ <b>–¶—ñ–Ω–∞:</b> {html.escape(game.final_formatted_price)} {f'(-{game.discount}%)' if game.discount != 0 else ''}"
            if not game.is_free and game.final_formatted_price
            else "üÜì <b>–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ</b>"
        )

        metacritic = f"üèÜ <b>Metacritic:</b> {html.escape(game.metacritic)}" if game.metacritic !="-1" else ""
        recommendations = f"üëç <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π:</b> {game.recomendations}" if game.recomendations else ""
        release = f"üìÖ <b>–†–µ–ª—ñ–∑:</b> {game.release_data.strftime('%d.%m.%Y')}" if game.release_data else ""

        text = (
            f"–ù–∞–∑–≤–∞: <b>{html.escape(game.name)}</b>\n"
            f"{price_info}"
            f"{metacritic}\n"
            f"{recommendations}\n"
            f"{release}\n\n"
            f"üìö {html.escape(game.short_description or '–û–ø–∏—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.')}\n\n"
            f"üè∑Ô∏è <b>–ñ–∞–Ω—Ä–∏:</b> {genre_names}\n"
            f"üìÇ <b>–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó:</b> {category_names}\n"
            f"{f'üì¢ <b>–í–∏–¥–∞–≤–µ—Ü—å:</b> {publisher_names}\n' if publisher_names else ''}"
            f"\nüîó <a href=\"https://store.steampowered.com/app/{game.steam_appid}\">–°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤ Steam</a>"
        )

        if game.trailer_url:
            text += f'\nüé¨ <a href="{html.escape(game.trailer_url)}">–¢—Ä–µ–π–ª–µ—Ä</a>'

        return text.strip()
