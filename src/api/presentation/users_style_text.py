import datetime
from typing import Optional, Union, List

from pydantic import BaseModel

from src.api.presentation.utils.shared_text import create_short_search_games_shared
from src.application.dto.player_dto import SteamPlayer
from src.application.dto.users_dto import GamesToWishlist


class UsersStyleText:
    STATUS_MAP = {
        0: "üü• –û—Ñ–ª–∞–π–Ω",
        1: "üü© –û–Ω–ª–∞–π–Ω",
        2: "üîô –í—ñ–¥—ñ–π—à–æ–≤",
        3: "üîò –ù–µ —Ç—É—Ä–±—É–≤–∞—Ç–∏",
        4: "üü® –í –º–µ—Ä–µ–∂—ñ, –∞–ª–µ –Ω–µ –≤ –≥—Ä—ñ",
        5: "üéÆ –£ –≥—Ä—ñ",
        6: "üì± –ó –º–æ–±—ñ–ª—å–Ω–æ–≥–æ"
    }

    def __change_int_to_date(self,date:int):
        return datetime.date.fromtimestamp(date)

    def __format_date(self,date:Optional[Union[datetime.date,int]]) -> str:
        if isinstance(date, int):
            date = self.__change_int_to_date(date)
        return date.strftime("%Y.%m.%d") if date else "-"

    def __validator(self,data:Optional[Union[str,dict,BaseModel]] = None,text:str="üö´ –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ —Ç—Ä–æ—Ö–∏ –∑–≥–æ–¥–æ–º."):
        if data is None:
            return text
        return None

    def get_player_full_stats(self,data:Optional[SteamPlayer]=None) -> dict:
        if answer:=self.__validator(data):
            return answer

        player = data.user_data.player
        visibility = "–í—ñ–¥–∫—Ä–∏—Ç–∏–π ‚úÖ" if player.communityvisibilitystate == 3 else "–ó–∞–∫—Ä–∏—Ç–∏–π üîí"
        profile_state = "–ê–∫—Ç–∏–≤–æ–≤–∞–Ω–∏–π" if player.profilestate == 1 else "–ù–µ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∏–π"
        new_text =(
        f"<b>üßë‚Äçüíª –ü—Ä–æ—Ñ—ñ–ª—å –≥—Ä–∞–≤—Ü—è Steam</b>\n\n"
        f"<b>üë§ –ù—ñ–∫:</b> {player.personaname or '‚Äî'}\n"
        f"<b>üÜî SteamID:</b> <code>{player.steamid}</code>\n"
        f"<b>üìÖ –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:</b> {self.__format_date(player.timecreated)}\n"
        f"<b>üïí –ß–∞—Å —É Steam:</b> {player.timelive or '‚Äî'}\n"
        f"<b>üì§ –í–æ—Å—Ç–∞–Ω–Ω—î –æ–Ω–ª–∞–π–Ω:</b> {self.__format_date(player.lastlogoff)}\n"
        f"<b>üßë‚Äçü§ù‚Äçüßë –î—Ä—É–∑—ñ–≤:</b> {data.user_friends_list.friends_count}\n"
        f"<b>üéÆ –ì—Ä–∞—î –∑–∞—Ä–∞–∑:</b> {player.gameextrainfo or '–ù—ñ'}\n\n"
        f"<b>üõ∞Ô∏è –ö—Ä–∞—ó–Ω–∞:</b> {player.loccountrycode or '‚Äî'}\n"
        f"<b>üîê –í–∏–¥–∏–º—ñ—Å—Ç—å –ø—Ä–æ—Ñ—ñ–ª—é:</b> {visibility}\n"
        f"<b>üìÑ –°—Ç–∞–Ω –ø—Ä–æ—Ñ—ñ–ª—é:</b> {profile_state}\n"
        f"<b>üì∂ –°—Ç–∞—Ç—É—Å:</b> {self.STATUS_MAP.get(player.personastate, '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
        f"<b>üè∑Ô∏è –ö–ª–∞–Ω ID:</b> {player.primaryclanid or '‚Äî'}\n"
        f"<b>üßæ –Ü–º‚Äô—è:</b> {player.realname or '‚Äî'}\n\n"
        f"<b>üÜî SteamID –ø–µ—Ä—à–æ–≥–æ –¥—Ä—É–≥–∞:</b> <code>{data.user_friends_list.first_friend.steamid}</code>\n"
        f"üë∂ <b>–ü–µ—Ä—à–∏–π –¥—Ä—É–≥ –¥–æ–¥–∞–Ω–∏–π:</b> {self.__format_date(data.user_friends_list.first_friend.friend_since)}\n"
        f"<b>üÜî SteamID –æ—Å—Ç–∞–Ω—å–æ–≥–æ –¥—Ä—É–≥–∞:</b> <code>{data.user_friends_list.last_friend.steamid}</code>\n"
        f"üßì <b>–û—Å—Ç–∞–Ω–Ω—ñ–π –¥—Ä—É–≥ –¥–æ–¥–∞–Ω–∏–π:</b> {self.__format_date(data.user_friends_list.last_friend.friend_since)}\n"
        f"<a href=\"{player.avatarfull}\">üñºÔ∏è –ê–≤–∞—Ç–∞—Ä–∫–∞</a>"
    )
        return new_text

    def message_no_steam_id(self,username:str):
        return (f"üëã <b>–ü—Ä–∏–≤—ñ—Ç, @{username}!</b>\n\n"
                f"üîí <b>–ù–∞ –∂–∞–ª—å, –≤–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ —Ñ—É–Ω–∫—Ü—ñ–π –±–æ—Ç–∞.</b>\n"
                f"üéÆ –©–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤—ñ–π Steam –ø—Ä–æ—Ñ—ñ–ª—å —É –±—É–¥—å-—è–∫–æ–º—É –∑ —Ñ–æ—Ä–º–∞—Ç—ñ–≤:\n"
                f"‚Ä¢ üî¢ SteamID64 (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: <code>7656119...</code>)\n"
                f"‚Ä¢ ‚úèÔ∏è –ù—ñ–∫ –∑ URL (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: <code>floysefake</code>)\n"
                f"‚Ä¢ üîó –ü–æ–≤–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å\n\n"
                f"<i>–§–æ—Ä–º–∞—Ç –≤–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ üòâ</i>")

    def message_change_steam_id(self, username: str):
        return (f"üëã <b>–ü—Ä–∏–≤—ñ—Ç —â–µ —Ä–∞–∑, @{username}!</b>\n\n"
                f"‚ôªÔ∏è <b>–ë–∞–∂–∞—î—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Å–≤—ñ–π Steam –ø—Ä–æ—Ñ—ñ–ª—å?</b>\n"
                f"üéÆ –ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–æ–≤–∏–π Steam –ø—Ä–æ—Ñ—ñ–ª—å —É –±—É–¥—å-—è–∫–æ–º—É –∑ —Ñ–æ—Ä–º–∞—Ç—ñ–≤:\n"
                f"‚Ä¢ üî¢ SteamID64 (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: <code>7656119...</code>)\n"
                f"‚Ä¢ ‚úèÔ∏è –ù—ñ–∫ –∑ URL (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: <code>floysefake</code>)\n"
                f"‚Ä¢ üîó –ü–æ–≤–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å\n\n"
                f"<i>–ú–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞—î–º–æ üòâ</i>")

    def message_incorrect_steam_id(self,steam_appid:str):
        return (f"‚ùå <b>–ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ Steam –ø—Ä–æ—Ñ—ñ–ª—å –∑–∞ ID <s>{steam_appid}</s></b>\n\n"
                f"üîÅ <b>–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!</b>")

    def message_correct_change_steam_id(self, username: str, steam_appid: str):
        return (f"‚úÖ <b>–í–∞—à Steam –ø—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ, @{username}!</b>\n\n"
                f"üÜî –ù–æ–≤–∏–π SteamID: <code>{steam_appid}</code>\n"
                f"üéâ –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –≤—Å—ñ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –±–æ—Ç–∞ –±–µ–∑ –æ–±–º–µ–∂–µ–Ω—å!")

    def message_post_game(self):
        return "<b>üéÆ –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –≥—Ä–∏, —è–∫—É —Ö–æ—á–µ—Ç–µ –¥–æ–¥–∞—Ç–∏:</b>"

    def message_incorrect_game(self):
        return "<b>‚ö†Ô∏è –ì—Ä—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–Ω—è —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.</b>"

    def create_short_search_games(self,data,page:int=1,limit:int=5):
        return create_short_search_games_shared(data,page,limit)

    def message_correct_add_game(self):
        return "<b>‚úÖ –ì—Ä—É —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ –≤–∞—à–æ–≥–æ –≤—ñ—à–ª—ñ—Å—Ç–∞!</b>"

    def message_incorrect_add_game(self):
        return "<b>‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –≥—Ä—É –¥–æ –≤—ñ—à–ª—ñ—Å—Ç–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É –≥—Ä–∏.</b>"

    from typing import List

    from typing import List

    def create_short_wishlist_message(self, data: List[GamesToWishlist]) -> str:
        if not data:
            return "üìù –í—ñ—à–ª—ñ—Å—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π."

        lines = []
        for game in data:
            # –ù–∞–∑–≤–∞ –≥—Ä–∏ + ID
            line = f"üéÆ <b>{game.name}</b> (ID: {game.steam_appid})\n"

            # –ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å (–æ–±—Ä—ñ–∑–∞–Ω–∏–π –¥–æ 100 —Å–∏–º–≤–æ–ª—ñ–≤)
            desc = game.short_description or "–ë–µ–∑ –æ–ø–∏—Å—É"
            if len(desc) > 100:
                desc = desc[:97] + "..."
            line += f"üìñ {desc}\n"

            # –¶—ñ–Ω–∞ + –∑–Ω–∏–∂–∫–∞, —è–∫—â–æ —î
            if game.price_overview:
                price = game.price_overview.final / 100  # —Ü—ñ–Ω–∞ –≤ –¥–æ–ª–∞—Ä–∞—Ö
                discount = game.price_overview.discount_percent or 0
                if discount > 0:
                    discounted_price = price * (100 - discount) / 100
                    line += (
                        f"üí∏ –¶—ñ–Ω–∞: <s>{price:.2f}$</s> ‚Üí <b>{discounted_price:.2f}$</b> "
                        f"(<i>-{discount}%</i>)\n"
                    )
                else:
                    line += f"üí∞ –¶—ñ–Ω–∞: <b>{price:.2f}$</b>\n"

            else:
                line += "üí∞ –¶—ñ–Ω–∞: –≤—ñ–¥—Å—É—Ç–Ω—è\n"

            lines.append(line)

        return "\n".join(lines)

    def game_correct_delete_wishlist(self, user):
        return f"‚úÖ <b>–ì—Ä—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –≤–∞—à–æ–≥–æ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω–æ–≥–æ, {user}!</b>"

    def game_not_delete_wishlist(self, user):
        return f"‚ö†Ô∏è <b>–ì—Ä—É –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∑—ñ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω–æ–≥–æ, {user}, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∞ –≤–∂–µ —Ç–∞–º —î.</b>"



